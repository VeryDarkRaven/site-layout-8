(()=>{"use strict";var __webpack_modules__={202:()=>{eval('\n;// CONCATENATED MODULE: ./src/js/modules/mouse-move-parallax.js\nfunction mouseParallax () {\r\n  const parallaxItems = document.querySelectorAll("[data-mprlx]");\r\n\r\n  if (parallaxItems) {\r\n    parallaxItems.forEach(item => {\r\n      const parallaxMouseContainer = item.closest("[data-mprlx-container]");\r\n\r\n      let positionX = 0, positionY = 0;\r\n      let coordXprocent = 0, coordYprocent = 0;\r\n\r\n      let speed = 0.05;\r\n\r\n      let coefficientX = 10;\r\n      let coefficientY = 10;\r\n\r\n\t\t\tconst directionMovementX = item.hasAttribute(\'data-mprlx--x\') ? -1 : 1;\r\n\t\t\tconst directionMovementY = item.hasAttribute(\'data-mprlx--y\') ? -1 : 1;\r\n\r\n\t\t\tconst directionX = item.hasAttribute(\'data-mprlx-x\') ? 0 : 1;\r\n\t\t\tconst directionY = item.hasAttribute(\'data-mprlx-y\') ? 0 : 1;\r\n\r\n\r\n\r\n      if (item.dataset.parallaxSpeed || item.dataset.parallaxCof) {\r\n        recordingCustomCoefficients();\r\n      }\r\n  \r\n      function recordingCustomCoefficients () {\r\n        speed = +item.dataset.parallaxSpeed || 0.05;\r\n  \r\n        if (typeof(+item.dataset.parallaxCof) !== "number") {\r\n          let coefficientArr = [];\r\n  \r\n          coefficientArr = item.dataset.parallaxCof.split(",").forEach(item => +item);\r\n  \r\n          coefficientX = coefficientArr[0];\r\n          coefficientY = coefficientArr[1];\r\n        } else {\r\n          let coefficient = +item.dataset.parallaxCof || 10;\r\n  \r\n          coefficientX = coefficientY = coefficient;\r\n        }\r\n      }\r\n\r\n\r\n\r\n      function setMouseParallaxStyle () {\r\n        const distX = coordXprocent - positionX;\r\n        const distY = coordYprocent - positionY;\r\n\r\n        positionX = positionX + (distX * speed);\r\n        positionY = positionY + (distY * speed);\r\n\r\n        item.style.cssText = `transform: translate(${(directionMovementX * positionX / coefficientX) * directionY}%, ${(directionMovementY * positionY / coefficientY) * directionX}%);`;\r\n\r\n        requestAnimationFrame(setMouseParallaxStyle);\r\n      }\r\n\r\n      function mouseMoveParallax (parallaxContainer = window) {\r\n        parallaxContainer.addEventListener("mousemove", mouseMoveParallaxContent);\r\n  \r\n        function mouseMoveParallaxContent (e) {\r\n          const offsetTop = item.getBoundingClientRect().top + window.scrollY;\r\n          if (offsetTop >= window.scrollY || (offsetTop + item.offsetHeight) >= window.scrollY)  {\r\n            const parallaxWidth = window.innerWidth;\r\n            const parallaxHeight = window.innerHeight;\r\n  \r\n            const coordX = e.clientX - parallaxWidth / 2;\r\n            const coordY = e.clientY - parallaxHeight / 2;\r\n  \r\n            coordXprocent = coordX / parallaxWidth * 100;\r\n            coordYprocent = coordY / parallaxHeight * 100;\r\n          }\r\n        }\r\n      }\r\n\r\n      setMouseParallaxStyle();\r\n\r\n\t\t\tparallaxMouseContainer ? mouseMoveParallax(parallaxMouseContainer) : mouseMoveParallax();\r\n    })\r\n  }\r\n}\r\n\r\nwindow.addEventListener("DOMContentLoaded", mouseParallax);\n;// CONCATENATED MODULE: ./src/js/modules/change-scroll-header-bg-color.js\nfunction changeScrollHeaderBGColor () {\r\n  const header = document.querySelector(".header");\r\n\r\n  let scroll = window.scrollY;\r\n\r\n  if (scroll > 0) {\r\n    header.classList.add("header__bg_grey");\r\n  } else {\r\n    header.classList.remove("header__bg_grey");\r\n  }\r\n}\r\n\r\ndocument.addEventListener("DOMContentLoaded", changeScrollHeaderBGColor);\r\nwindow.addEventListener("scroll", changeScrollHeaderBGColor);\r\n\r\nchangeScrollHeaderBGColor();\n;// CONCATENATED MODULE: ./src/js/modules/change-scroll-header-hidden.js\nfunction changeScrollHeaderHidden () {\r\n  const header = document.querySelector("[data-header-scroll-hidden");\r\n\r\n  let scrollSpeed = 20;\r\n\r\n  if (+header.dataset.headerScrollHidden > 0) {\r\n    scrollSpeed = +header.dataset.headerScrollHidden;\r\n  }\r\n\r\n  let scroll = window.scrollY;\r\n  let previousScroll = scroll;\r\n\r\n  window.addEventListener("scroll", function() {\r\n    let scroll = window.scrollY;\r\n\r\n    if (scroll - previousScroll >= scrollSpeed && scroll > 0) {\r\n      header.classList.add("header__hidden");\r\n    } else if (scroll - previousScroll <= -scrollSpeed || scroll <= 0) {\r\n      header.classList.remove("header__hidden");\r\n    }\r\n\r\n    previousScroll = scroll;\r\n  })\r\n}\r\n\r\ndocument.addEventListener("DOMContentLoaded", changeScrollHeaderHidden);\r\n\r\nchangeScrollHeaderHidden();\n;// CONCATENATED MODULE: ./src/js/modules/header-nav-item-click.js\nfunction headerNavItemClick () {\r\n  const header = document.querySelector(".header");\r\n  const nav = header.querySelector(".header__nav");\r\n  const items = nav.querySelectorAll("a");\r\n\r\n  for(let item of items) {\r\n    item.addEventListener("click", function() {\r\n      if (!item.classList.item("active")) {\r\n        for (let i = 0; i < items.length; i++) {\r\n          if (items[i] !== item) {\r\n            items[i].classList.remove("active");\r\n          }\r\n        }\r\n\r\n        item.classList.add("active");\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nheaderNavItemClick();\n;// CONCATENATED MODULE: ./src/js/modules/burger.js\nfunction burger () {\r\n  const body = document.querySelector("body");\r\n  const burger = document.querySelector("[data-burger]");\r\n  const parent = burger.closest("[data-burger-parent]");\r\n\r\n  burger.addEventListener("click", function() {\r\n    burger.classList.toggle("active");\r\n    \r\n    if (burger.classList.contains("active")) {\r\n      body.style.overflowY = "hidden";\r\n\r\n      parent.dataset.burgerParentActive = "";\r\n    } else {\r\n      body.style.overflowY = "";\r\n\r\n      parent.removeAttribute("data-burger-parent-active");\r\n    }\r\n  });\r\n}\r\n\r\nburger();\n;// CONCATENATED MODULE: ./src/js/modules/video-player.js\nfunction videoPlayer () {\r\n  const players = document.querySelectorAll("[data-vp-container]");\r\n  players.forEach(item => {\r\n    const player = item;\r\n    const video = player.querySelector("[data-vp-video]");\r\n    const controlContainer = player.querySelector(".video__control-container");\r\n    const linesContainer = controlContainer.querySelector(".control__lines");\r\n\r\n    let previousVolumeNum = 1;\r\n\r\n    initVideoListeners();\r\n    initPlayerListeners();\r\n    initTimelineListeners();\r\n\r\n    function initVideoListeners () {\r\n      video.addEventListener("click", toggleVideo);\r\n      video.addEventListener("volumechange", updateVolume);\r\n      video.addEventListener("dblclick", toggleFullscreen);\r\n      video.addEventListener("loadedmetadata", () => {\r\n        setVideoDuration();\r\n        updateVolume();\r\n      });\r\n      video.addEventListener("timeupdate", () => {\r\n        setVideoDuration();\r\n        toggleInterface();\r\n      });\r\n    }\r\n\r\n    function initPlayerListeners () {\r\n      player.addEventListener("fullscreenchange", checkFullscreen);\r\n      player.addEventListener("mousemove", checkInterface);\r\n      player.addEventListener("click", function() {\r\n        window.addEventListener("click", clickOutPlayer);\r\n        document.addEventListener("keydown", playerKeyDown);\r\n      });\r\n      player.querySelector(".playback__container").addEventListener("click", toggleVideo);\r\n      player.querySelector(".control__full").addEventListener("click", toggleFullscreen);\r\n      player.querySelector(".volume__icon-container").addEventListener("click", function() {\r\n        if (video.volume !== 0) {\r\n          previousVolumeNum = video.volume;\r\n          video.volume = 0;\r\n        } else {\r\n          video.volume = previousVolumeNum;\r\n          previousVolumeNum = 0;\r\n        }\r\n      });\r\n      player.querySelector(".volume__lines-container").addEventListener("click", function(e) {\r\n        const {bottom} = e.target.getBoundingClientRect();\r\n        video.volume = calcVolumeLine(e, bottom);\r\n      });\r\n    }\r\n\r\n    function initTimelineListeners () {\r\n      linesContainer.addEventListener("mousemove", calcGhostLine);\r\n      linesContainer.addEventListener("click", function(e) {\r\n        const {left} = e.target.getBoundingClientRect();\r\n        video.currentTime = calcNeededLine(e, left);\r\n      })\r\n    }\r\n\r\n\r\n\r\n    function toggleVideo () {\r\n      if (video.paused) {\r\n        player.classList.add("play");\r\n        video.play();\r\n      } else {\r\n        player.classList.remove("play");\r\n        video.pause();\r\n      }\r\n    }\r\n\r\n    function setVideoDuration () {\r\n      const duration = +video.duration.toFixed();\r\n      const current = +video.currentTime.toFixed();\r\n      const newTime = `${formatTime(current)} / ${formatTime(duration)}`;\r\n      const durationContainer = controlContainer.querySelector(".control__duration").querySelector("p");\r\n\r\n      linesContainer.querySelector(".line_current").style.width = `${current / (duration / 100)}%`;\r\n\r\n      if (durationContainer.innerHTML !== newTime) {\r\n        durationContainer.innerHTML = newTime;\r\n      }\r\n    }\r\n\r\n    function formatTime(seconds) {\r\n      return `${Math.floor(seconds / 60)}:${fixNumber(Math.floor(seconds % 60))}`;\r\n    }\r\n\r\n    function fixNumber(number) {\r\n      return number < 10 ? `0${number}` : `${number}`;\r\n    }\r\n\r\n    function updateVolume () {\r\n      const volumeContainer = controlContainer.querySelector("[data-vp-volume]");\r\n\r\n      player.querySelector(".volume__line_currect").style.height = video.volume * 100 + "%";\r\n\r\n      if (video.volume > 0.66) {\r\n        volumeContainer.dataset.vpVolume = "up";\r\n      } else if (video.volume > 0.33) {\r\n        volumeContainer.dataset.vpVolume = "down";\r\n      } else if (video.volume > 0) {\r\n        volumeContainer.dataset.vpVolume = "mute";\r\n      } else if (video.volume === 0) {\r\n        volumeContainer.dataset.vpVolume = "off";\r\n      }\r\n    }\r\n\r\n    function toggleFullscreen () {\r\n      if (document.fullscreenElement) {\r\n        document.exitFullscreen();\r\n      } else {\r\n        player.requestFullscreen();\r\n      }\r\n    }\r\n\r\n    function checkFullscreen () {\r\n      let isFullscreen = Boolean(document.fullscreenElement);\r\n      isFullscreen ? player.classList.add("fullscreen") : player.classList.remove("fullscreen");\r\n    }\r\n\r\n    let isHiddenInterface = false;\r\n\r\n    function toggleInterface () {\r\n      if (isHiddenInterface) {\r\n        player.classList.add("hidden-interface");\r\n      } else {\r\n        player.classList.remove("hidden-interface");\r\n      }\r\n    }\r\n\r\n    let timeout = null;\r\n\r\n    function checkInterface () {\r\n      isHiddenInterface = false;\r\n\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n\r\n        timeout = null;\r\n      }\r\n\r\n      timeout = setTimeout(function() {isHiddenInterface = true}, 3000);\r\n    }\r\n\r\n    function calcGhostLine (e) {\r\n      const hint = linesContainer.querySelector(".control__hint");\r\n      const lineHover = linesContainer.querySelector(".line_hover");\r\n\r\n      const {left} = e.target.getBoundingClientRect();\r\n\r\n      hint.innerHTML = formatTime(calcNeededLine(e, left));\r\n      hint.style.left = `${e.clientX - (left + (hint.offsetWidth / 2))}px`;\r\n      lineHover.style.width = `${e.clientX - left}px`;\r\n    }\r\n\r\n    function calcNeededLine (e, left) {\r\n      const needPercent = ((e.clientX - left) / e.target.offsetWidth);\r\n      return video.duration * needPercent;\r\n    }\r\n\r\n    function calcVolumeLine (e, bottom) {\r\n      const needPercent = (Math.abs((e.clientY - bottom)) / e.target.offsetHeight);\r\n      return needPercent;\r\n    }\r\n\r\n\r\n\r\n    function clickOutPlayer (e) {\r\n      if (!e.target.closest("[data-vp-container]")) {\r\n        window.removeEventListener("click", clickOutPlayer);\r\n        document.removeEventListener("keydown", playerKeyDown);\r\n      }\r\n    }\r\n\r\n    function playerKeyDown (e) {\r\n      if (e.code === \'Space\') {\r\n        e.preventDefault();\r\n        toggleVideo();\r\n      } else if (e.code === \'ArrowRight\') {\r\n        video.currentTime += 5;\r\n      } else if (e.code === \'ArrowLeft\') {\r\n        video.currentTime -= 5;\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nwindow.addEventListener("DOMContentLoaded", videoPlayer);\n;// CONCATENATED MODULE: ./src/js/modules/courses-actions-buttons.js\nfunction coursesActionsButtonsClick () {\r\n  const courses = document.querySelector(".courses");\r\n  const articles = courses.querySelector(".courses__items").querySelectorAll(".item");\r\n\r\n  articles.forEach(item => {\r\n    const buttonsContainer = item.querySelector(".item__actions");\r\n    const buttons = buttonsContainer.querySelectorAll("button");\r\n\r\n    buttons.forEach(item => item.addEventListener("click", () => item.classList.toggle("active")));\r\n  })\r\n}\r\n\r\ncoursesActionsButtonsClick();\n;// CONCATENATED MODULE: ./src/js/modules/hidden-placeholder.js\nfunction hiddenPlaceholder () {\r\n  const containers = document.querySelectorAll("[data-h-ph-container]");\r\n  const items = document.querySelectorAll("[data-h-ph]");\r\n\r\n  containers.forEach(item => {\r\n    const fields = item.querySelectorAll("input, textarea");\r\n\r\n    if (fields.length > 0) {\r\n      for (let field of fields) {\r\n        clickField(field);\r\n      }\r\n    }\r\n  })\r\n\r\n  if (items.length > 0) {\r\n    for (let item of items) {\r\n      clickField(item);\r\n    }\r\n  }\r\n\r\n  function clickField (field) {\r\n    field.addEventListener("click", function() {\r\n      const savePlaceholder = this.placeholder;\r\n      const thisElement = this;\r\n\r\n      this.setAttribute("placeholder", "");\r\n      document.addEventListener("mouseup", function() {\r\n        thisElement.setAttribute("placeholder", savePlaceholder);\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nhiddenPlaceholder();\n;// CONCATENATED MODULE: ./src/js/modules/spollers.js\nfunction spollers () {\r\n  const spollersList = document.querySelectorAll("[data-splrs-container]");\r\n\r\n  if (spollersList.length > 0) {\r\n    const spollersRegular = Array.from(spollersList).filter(item => !item.dataset.splrsContainer.split(",")[0]);\r\n\r\n    if (spollersRegular.length) {\r\n      initSpollers(spollersRegular);\r\n    }\r\n\r\n\r\n\r\n    let spollersMediaQueriesArr = dataMediaQueries(spollersList, "splrsContainer");\r\n\r\n    if (spollersMediaQueriesArr && spollersMediaQueriesArr.length) {\r\n      spollersMediaQueriesArr.forEach(item => {\r\n        item.matchMedia.addEventListener("change", () => {\r\n          initSpollers(item.itemsArr, item.matchMedia);\r\n        });\r\n\r\n        initSpollers(item.itemsArr, item.matchMedia);\r\n      })\r\n    }\r\n\r\n\r\n\r\n    function initSpollers (spollersItemsArr, matchMedia = false) {\r\n      spollersItemsArr.forEach(spollersContainer => {\r\n        spollersContainer = matchMedia ? spollersContainer.item : spollersContainer;\r\n\r\n        if (matchMedia.matches || !matchMedia) {\r\n          spollersContainer.classList.add(\'_spoller-init\');\r\n          initSpollerBody(spollersContainer);\r\n          spollersContainer.addEventListener("click", setSpollerAction);\r\n        } else {\r\n          spollersContainer.classList.remove("_spoller-init");\r\n          initSpollerBody(spollersContainer, false);\r\n          spollersContainer.removeEventListener("click", setSpollerAction);\r\n        }\r\n      })\r\n    }\r\n\r\n    function initSpollerBody (spollersContainer, hideSpollerBody = true) {\r\n      let spollerTitles = spollersContainer.querySelectorAll("[data-splr]");\r\n\r\n      if (spollerTitles.length) {\r\n        spollerTitles = Array.from(spollerTitles).filter(item => item.closest("[data-splrs-container]") === spollersContainer);\r\n        \r\n        spollerTitles.forEach(item => {\r\n          if (hideSpollerBody) {\r\n            item.removeAttribute("tabindex");\r\n\r\n            if (!item.classList.contains(\'_spoller-active\')) {\r\n\t\t\t\t\t\t\titem.nextElementSibling.hidden = true;\r\n\t\t\t\t\t\t}\r\n          } else {\r\n            item.setAttribute(\'tabindex\', \'-1\');\r\n\t\t\t\t\t\titem.nextElementSibling.hidden = false;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    function setSpollerAction (e) {\r\n      const el = e.target;\r\n\r\n      if (el.closest("[data-splr]")) {\r\n        const spollerTitle = el.closest("[data-splr]");\r\n        const spollerContainer = spollerTitle.closest("[data-splrs-container]");\r\n\r\n        const oneSpoller = spollerContainer.hasAttribute("data-splrs-one");\r\n        const spollerSpeed = spollerContainer.dataset.splrsSpeed ? parseInt(spollerContainer.dataset.splrsSpeed) : 500;\r\n\r\n        if (!spollerContainer.querySelectorAll("._slide").length) {\r\n          if (oneSpoller && !spollerTitle.classList.contains(\'_spoller-active\')) {\r\n\t\t\t\t\t\thideSpollersBody(spollerContainer);\r\n\t\t\t\t\t}\r\n\r\n          spollerTitle.classList.toggle(\'_spoller-active\');\r\n\t\t\t\t\t_slideToggle(spollerTitle.nextElementSibling, spollerSpeed);\r\n        }\r\n\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    function hideSpollersBody (spollerContainer) {\r\n      console.log("hide");\r\n\r\n      const spollerActiveTitle = spollerContainer.querySelector(\'[data-splr]._spoller-active\');\r\n      const spollerSpeed = spollerContainer.dataset.splrsSpeed ? parseInt(spollerContainer.dataset.splrsSpeed) : 500;\r\n\r\n      if (spollerActiveTitle && !spollerContainer.querySelectorAll(\'._slide\').length) {\r\n        spollerActiveTitle.classList.remove(\'_spoller-active\');\r\n\t\t\t\t_slideUp(spollerActiveTitle.nextElementSibling, spollerSpeed);\r\n      }\r\n    }\r\n\r\n\r\n\r\n    const spollersClose = document.querySelectorAll(\'[data-splr-close]\');\r\n    \r\n    if (spollersClose.length) {\r\n      document.addEventListener("click", (e) => {\r\n        const el = e.target;\r\n\t\t\t\tif (!el.closest(\'[data-splrs-container]\')) {\r\n\t\t\t\t\tspollersClose.forEach(item => {\r\n\t\t\t\t\t\tconst spollerContainer = item.closest(\'[data-splrs-container]\');\r\n\t\t\t\t\t\tconst spollerSpeed = spollerContainer.dataset.splrsSpeed ? parseInt(spollerContainer.dataset.splrsSpeed) : 500;\r\n\t\t\t\t\t\titem.classList.remove(\'_spoller-active\');\r\n\t\t\t\t\t\t_slideUp(item.nextElementSibling, spollerSpeed);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nspollers();\r\n\r\n\r\n\r\nfunction dataMediaQueries (list, dataName) {\r\n  const mediaArr = Array.from(list).filter(item => item.dataset.splrsContainer.split(",")[0]);\r\n\r\n  if (mediaArr.length) {\r\n    const breakpointsArr = [];\r\n\r\n    mediaArr.forEach(item => {\r\n      const breakpointParams = item.dataset[dataName];\r\n      const breakpointParamsArr = breakpointParams.split(",");\r\n\r\n      const breakpoint = {};\r\n      breakpoint.value = breakpointParamsArr[0];\r\n      breakpoint.type = breakpointParamsArr[1] ? breakpointParamsArr[1].trim() : "max";\r\n      breakpoint.item = item;\r\n\r\n      breakpointsArr.push(breakpoint);\r\n    })\r\n\r\n    let mediaQueries = breakpointsArr.map(item => {\r\n      return \'(\' + item.type + "-width: " + item.value + "px)," + item.value + \',\' + item.type;\r\n    })\r\n\r\n    mediaQueries = uniqArray(mediaQueries);\r\n\r\n    const mediaQueriesArr = [];\r\n\r\n    if (mediaQueries.length) {\r\n      mediaQueries.forEach(breakpoint => {\r\n        const paramsArray = breakpoint.split(",");\r\n\t\t\t\tconst mediaBreakpoint = paramsArray[1];\r\n\t\t\t\tconst mediaType = paramsArray[2];\r\n\t\t\t\tconst matchMedia = window.matchMedia(paramsArray[0]);\r\n\r\n        const itemsArr = breakpointsArr.filter(item => {\r\n          if (item.value === mediaBreakpoint && item.type === mediaType) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n        });\r\n\r\n        mediaQueriesArr.push({itemsArr, matchMedia});\r\n      })\r\n\r\n      return mediaQueriesArr;\r\n    }\r\n  }\r\n}\r\n\r\nfunction uniqArray (arr) {\r\n  return arr.filter((item, index, arr) => arr.indexOf(item) === index);\r\n}\r\n\r\n\r\n\r\nlet _slideUp = (target, duration = 500, showmore = 0) => {\r\n\tif (!target.classList.contains(\'_slide\')) {\r\n\t\ttarget.classList.add(\'_slide\');\r\n\t\ttarget.style.transitionProperty = \'height, margin, padding\';\r\n\t\ttarget.style.transitionDuration = duration + \'ms\';\r\n\t\ttarget.style.height = `${target.offsetHeight}px`;\r\n\t\ttarget.offsetHeight;\r\n\t\ttarget.style.overflow = \'hidden\';\r\n\t\ttarget.style.height = showmore ? `${showmore}px` : `0px`;\r\n\t\ttarget.style.paddingTop = 0;\r\n\t\ttarget.style.paddingBottom = 0;\r\n\t\ttarget.style.marginTop = 0;\r\n\t\ttarget.style.marginBottom = 0;\r\n\t\twindow.setTimeout(() => {\r\n\t\t\ttarget.hidden = !showmore ? true : false;\r\n\t\t\t!showmore ? target.style.removeProperty(\'height\') : null;\r\n\t\t\ttarget.style.removeProperty(\'padding-top\');\r\n\t\t\ttarget.style.removeProperty(\'padding-bottom\');\r\n\t\t\ttarget.style.removeProperty(\'margin-top\');\r\n\t\t\ttarget.style.removeProperty(\'margin-bottom\');\r\n\t\t\t!showmore ? target.style.removeProperty(\'overflow\') : null;\r\n\t\t\ttarget.style.removeProperty(\'transition-duration\');\r\n\t\t\ttarget.style.removeProperty(\'transition-property\');\r\n\t\t\ttarget.classList.remove(\'_slide\');\r\n\t\t\t// Создаем событие \r\n\t\t\tdocument.dispatchEvent(new CustomEvent("slideUpDone", {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\ttarget: target\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}, duration);\r\n\t}\r\n}\r\n\r\nlet _slideDown = (target, duration = 500, showmore = 0) => {\r\n\tif (!target.classList.contains(\'_slide\')) {\r\n\t\ttarget.classList.add(\'_slide\');\r\n\t\ttarget.hidden = target.hidden ? false : null;\r\n\t\tshowmore ? target.style.removeProperty(\'height\') : null;\r\n\t\tlet height = target.offsetHeight;\r\n\t\ttarget.style.overflow = \'hidden\';\r\n\t\ttarget.style.height = showmore ? `${showmore}px` : `0px`;\r\n\t\ttarget.style.paddingTop = 0;\r\n\t\ttarget.style.paddingBottom = 0;\r\n\t\ttarget.style.marginTop = 0;\r\n\t\ttarget.style.marginBottom = 0;\r\n\t\ttarget.offsetHeight;\r\n\t\ttarget.style.transitionProperty = "height, margin, padding";\r\n\t\ttarget.style.transitionDuration = duration + \'ms\';\r\n\t\ttarget.style.height = height + \'px\';\r\n\t\ttarget.style.removeProperty(\'padding-top\');\r\n\t\ttarget.style.removeProperty(\'padding-bottom\');\r\n\t\ttarget.style.removeProperty(\'margin-top\');\r\n\t\ttarget.style.removeProperty(\'margin-bottom\');\r\n\t\twindow.setTimeout(() => {\r\n\t\t\ttarget.style.removeProperty(\'height\');\r\n\t\t\ttarget.style.removeProperty(\'overflow\');\r\n\t\t\ttarget.style.removeProperty(\'transition-duration\');\r\n\t\t\ttarget.style.removeProperty(\'transition-property\');\r\n\t\t\ttarget.classList.remove(\'_slide\');\r\n\t\t\t// Создаем событие \r\n\t\t\tdocument.dispatchEvent(new CustomEvent("slideDownDone", {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\ttarget: target\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}, duration);\r\n\t}\r\n}\r\n\r\nlet _slideToggle = (target, duration = 500) => {\r\n\tif (target.hidden) {\r\n\t\treturn _slideDown(target, duration);\r\n\t} else {\r\n\t\treturn _slideUp(target, duration);\r\n\t}\r\n}\n;// CONCATENATED MODULE: ./src/js/app.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp-project/./src/js/app.js_+_9_modules?')}},__webpack_exports__={};__webpack_modules__[202]()})();