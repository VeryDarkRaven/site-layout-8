/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/modules/burger.js":
/*!**********************************!*\
  !*** ./src/js/modules/burger.js ***!
  \**********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
function burger () {
  const body = document.querySelector("body");
  const burger = document.querySelector("[data-burger]");
  const parent = burger.closest("[data-burger-parent]");

  burger.addEventListener("click", function() {
    burger.classList.toggle("active");
    
    if (burger.classList.contains("active")) {
      body.style.overflowY = "hidden";

      parent.dataset.burgerParentActive = "";
    } else {
      body.style.overflowY = "";

      parent.removeAttribute("data-burger-parent-active");
    }
  });
}

burger();

/***/ }),

/***/ "./src/js/modules/change-scroll-header-bg-color.js":
/*!*********************************************************!*\
  !*** ./src/js/modules/change-scroll-header-bg-color.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
function changeScrollHeaderBGColor () {
  const header = document.querySelector(".header");

  let scroll = window.scrollY;

  if (scroll > 0) {
    header.classList.add("header__bg_grey");
  } else {
    header.classList.remove("header__bg_grey");
  }
}

document.addEventListener("DOMContentLoaded", changeScrollHeaderBGColor);
window.addEventListener("scroll", changeScrollHeaderBGColor);

changeScrollHeaderBGColor();

/***/ }),

/***/ "./src/js/modules/change-scroll-header-hidden.js":
/*!*******************************************************!*\
  !*** ./src/js/modules/change-scroll-header-hidden.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
function changeScrollHeaderHidden () {
  const header = document.querySelector("[data-header-scroll-hidden");

  let scrollSpeed = 20;

  if (+header.dataset.headerScrollHidden > 0) {
    scrollSpeed = +header.dataset.headerScrollHidden;
  }

  let scroll = window.scrollY;
  let previousScroll = scroll;

  window.addEventListener("scroll", function() {
    let scroll = window.scrollY;

    if (scroll - previousScroll >= scrollSpeed && scroll > 0) {
      header.classList.add("header__hidden");
    } else if (scroll - previousScroll <= -scrollSpeed || scroll <= 0) {
      header.classList.remove("header__hidden");
    }

    previousScroll = scroll;
  })
}

document.addEventListener("DOMContentLoaded", changeScrollHeaderHidden);

changeScrollHeaderHidden();

/***/ }),

/***/ "./src/js/modules/header-nav-item-click.js":
/*!*************************************************!*\
  !*** ./src/js/modules/header-nav-item-click.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
function headerNavItemClick () {
  const header = document.querySelector(".header");
  const nav = header.querySelector(".header__nav");
  const items = nav.querySelectorAll("a");

  for(let item of items) {
    item.addEventListener("click", function() {
      if (!item.classList.item("active")) {
        for (let i = 0; i < items.length; i++) {
          if (items[i] !== item) {
            items[i].classList.remove("active");
          }
        }

        item.classList.add("active");
      }
    })
  }
}

headerNavItemClick();

/***/ }),

/***/ "./src/js/modules/mouse-move-parallax.js":
/*!***********************************************!*\
  !*** ./src/js/modules/mouse-move-parallax.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
function parallax () {
  const parallaxItems = document.querySelectorAll("[data-mprlx]");

  if (parallaxItems) {
    parallaxItems.forEach(item => {
      const parallaxMouseContainer = item.closest("[data-mprlx-container]");

      let positionX = 0, positionY = 0;
      let coordXprocent = 0, coordYprocent = 0;

      let speed = 0.05;

      let coefficientX = 10;
      let coefficientY = 10;

			const directionMovementX = item.hasAttribute('data-mprlx--x') ? -1 : 1;
			const directionMovementY = item.hasAttribute('data-mprlx--y') ? -1 : 1;

			const directionX = item.hasAttribute('data-mprlx-x') ? 0 : 1;
			const directionY = item.hasAttribute('data-mprlx-y') ? 0 : 1;



      if (item.dataset.parallaxSpeed || item.dataset.parallaxCof) {
        recordingCustomCoefficients();
      }
  
      function recordingCustomCoefficients () {
        speed = +item.dataset.parallaxSpeed || 0.05;
  
        if (typeof(+item.dataset.parallaxCof) !== "number") {
          let coefficientArr = [];
  
          coefficientArr = item.dataset.parallaxCof.split(",").forEach(item => +item);
  
          coefficientX = coefficientArr[0];
          coefficientY = coefficientArr[1];
        } else {
          let coefficient = +item.dataset.parallaxCof || 10;
  
          coefficientX = coefficientY = coefficient;
        }
      }



      function setMouseParallaxStyle () {
        const distX = coordXprocent - positionX;
        const distY = coordYprocent - positionY;

        positionX = positionX + (distX * speed);
        positionY = positionY + (distY * speed);

        item.style.cssText = `transform: translate(${(directionMovementX * positionX / coefficientX) * directionY}%, ${(directionMovementY * positionY / coefficientY) * directionX}%);`;

        requestAnimationFrame(setMouseParallaxStyle);
      }

      function mouseMoveParallax (parallaxContainer = window) {
        parallaxContainer.addEventListener("mousemove", mouseMoveParallaxContent);
  
        function mouseMoveParallaxContent (e) {
          const offsetTop = item.getBoundingClientRect().top + window.scrollY;
          if (offsetTop >= window.scrollY || (offsetTop + item.offsetHeight) >= window.scrollY)  {
            const parallaxWidth = window.innerWidth;
            const parallaxHeight = window.innerHeight;
  
            const coordX = e.clientX - parallaxWidth / 2;
            const coordY = e.clientY - parallaxHeight / 2;
  
            coordXprocent = coordX / parallaxWidth * 100;
            coordYprocent = coordY / parallaxHeight * 100;
          }
        }
      }

      setMouseParallaxStyle();

			parallaxMouseContainer ? mouseMoveParallax(parallaxMouseContainer) : mouseMoveParallax();
    })
  }
}

window.addEventListener("DOMContentLoaded", parallax);

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_mouse_move_parallax_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/mouse-move-parallax.js */ "./src/js/modules/mouse-move-parallax.js");
/* harmony import */ var _modules_change_scroll_header_bg_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/change-scroll-header-bg-color.js */ "./src/js/modules/change-scroll-header-bg-color.js");
/* harmony import */ var _modules_change_scroll_header_hidden_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/change-scroll-header-hidden.js */ "./src/js/modules/change-scroll-header-hidden.js");
/* harmony import */ var _modules_header_nav_item_click_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/header-nav-item-click.js */ "./src/js/modules/header-nav-item-click.js");
/* harmony import */ var _modules_burger_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/burger.js */ "./src/js/modules/burger.js");





})();

/******/ })()
;